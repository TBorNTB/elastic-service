plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sejong'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('springCloudVersion', "2025.0.0")
    set('springAiVersion', "1.0.0-M5")
}

dependencies {
    //  기본 Web & Validation
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //  Eureka (Service Discovery)
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Elasticsearch (Spring Data + Java Client)
    implementation 'org.springframework.data:spring-data-elasticsearch'
    implementation 'co.elastic.clients:elasticsearch-java:8.18.1'

    // Kafka (Messaging)
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // OpenAI Client (선택)
    implementation 'com.theokanning.openai-gpt3-java:client:0.18.2'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'

    //pdf
    implementation "org.apache.pdfbox:pdfbox:3.0.2"

    // Spring AI (Chat / Embedding / RAG)
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // Swagger (API 문서)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    //     Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
