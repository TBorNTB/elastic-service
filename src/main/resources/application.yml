server:
  port: 8080

spring:
  application:
    name: ELASTIC-SERVICE
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      embedding:
        options:
          model: text-embedding-3-small   # 또는 text-embedding-3-l
      chat:
        options:
          model: gpt-4o-mini   # 기본 모델

  kafka:
    bootstrap-servers: ${EC2_HOST_INFRA_PRIVATE}:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest

  thymeleaf:
    enabled: false

  cloud:
    discovery:
      enabled: true
    loadbalancer:
      ribbon:
        enabled: false

  elasticsearch:
    uris: http://${EC2_HOST_INFRA_PRIVATE}:9200
    connection-timeout: 5s
    socket-timeout: 30s

  data:
    elasticsearch:
      repositories:
        enabled: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EC2_HOST_APP_PRIVATE}:8761/eureka/   # 유레카가 있는 '앱서버'의 사설 IP
  instance:
    prefer-ip-address: true
    ip-address: ${EC2_HOST_INFRA_PRIVATE}
    non-secure-port: 8080
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

springdoc:
  api-docs:
    version: openapi_3_0
    enabled: true
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

logging:
  level:
    org.elasticsearch.client: TRACE